# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2024-07-31T21:12:20+00:00

from __future__ import annotations

from fastapi import FastAPI, Cookie
from fastapi.websockets import WebSocket
from internal.game_controller import GameController, NewGameResponse
from internal.websocket_server import WeboscketGameServer
from internal.records.champs import init_champ_db

api: FastAPI = FastAPI(
    title='yordle',
    version='1.0.0',
    servers=[{'url': '/'}],
)


init_champ_db()

controller = GameController()
server = WeboscketGameServer(controller)

@api.get(
    '/games',
    response_model=list[str],
    responses={'500': {'model': str}},
)
def get_games() -> list[str]:
    """
    get a list of games
    """
    return controller.get_game_list()

@api.get(
    '/active',
    response_model=dict(),
    responses={'500': {'model': str}},
)
def get_live_games() -> list[str]:
    """
    get a list of live games
    """
    return controller.get_active_games()

@api.post(
    '/games',
    response_model=NewGameResponse,
    responses={'500': {'model': str}},
)
def start_new_game(game: str) -> str:
    return controller.new_game(game)

@api.websocket(
    path='/play',
    name="websocket_endpoint",
)
async def websocket_endpoint(websocket: WebSocket, game_key: str, client_id: str):
    print("got a websocket")
    print("clientid", client_id)
    await websocket.accept()
    await server.connect(websocket, game_key=game_key, client_id=client_id)
@api.post(
    '/error',
    response_model=None,
)
def post_error(error: str) -> str:
    print(error)
    return 
    

# @app.post(
#     '/yordle/{id}/today',
#     response_model=str,
#     responses={'400': {'model': str}, '500': {'model': str}},
# )
# def post_answer(id: str, answer: str = ...) -> str:
#     """
#     post an answer to todays yordle
#     """
    
